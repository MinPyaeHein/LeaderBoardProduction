openapi: 3.0.0
info:
  title: Organizer API
  version: 1.0.0
paths:
  /event:
    post:
      tags:
        - Organizers
      summary: Create a new event
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequest'
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEventResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Organizers
      summary: Update an existing event
      operationId: updateEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventRequest'
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEventResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /event/scoreMatrix:
    post:
      tags:
        - Organizers
      summary: Create score matrices for an event
      operationId: createScoreMatrix
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScoreMatrixRequest'
      responses:
        '201':
          description: Score matrices created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScoreMatrixResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /event/investMatrix:
    post:
      tags:
        - Organizers
      summary: Create an investor matrix for an event
      operationId: createInvestMatrix
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvestMatrixRequest'
      responses:
        '201':
          description: Investor matrix created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvestMatrixResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /event/judges:
    post:
      tags:
        - Organizers
      summary: Add judges to an event
      operationId: addJudgesToEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJudgesToEventRequest'
      responses:
        '201':
          description: Judges added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddJudgesToEventResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'     
  /event/editors:
    post:
      tags:
        - Organizers
      summary: Add editors to an event
      operationId: addEditorsToEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEditorsToEventRequest'
      responses:
        '201':
          description: Editors added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddEditorsToEventResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /event/team:
    post:
      tags:
        - Organizers
      summary: Create a new team for an event
      operationId: createTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
      responses:
        '201':
          description: Team created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /event/teams:
    post:
      tags:
        - Organizers
      summary: Add a teams with leader to an event
      operationId: addTeamWithLeader
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTeamWithLeaderRequest'
      responses:
        '201':
          description: Team with leader added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTeamWithLeaderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /event/scoreTypes:
    get:
      tags:
        - Organizers
      summary: Get all score types
      operationId: getScoreTypes
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScoreTypesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Score types not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'  
  
components:
  schemas:
    CreateEventRequest:
      type: object
      properties:
        event:
          type: object
          properties:
            name:
              type: string
            status:
              type: string
              enum:
                - future
                - ongoing
                - past
            desc:
              type: string
            active:
              type: boolean
            start_date:
              type: string
              format: date
            end_date:
              type: string
              format: date
            start_time:
              type: string
              format: time
            end_time:
              type: string
              format: time
            all_day:
              type: boolean
            location:
              type: string
            event_type_id:
              type: integer
            score_type_id:
              type: integer
      required:
        - event
    CreateEventResponse:
      type: object
      properties:
        success:
          type: boolean
        event:
          $ref: '#/components/schemas/Event'
    
    UpdateEventRequest:
      type: object
      properties:
        event:
          type: object
          properties:
            event_id:
              type: integer
            name:
              type: string
            desc:
              type: string
            active:
              type: boolean
            event_type_id:
              type: integer
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            start_date:
              type: string
              format: date
            end_date:
              type: string
              format: date
            start_time:
              type: string
              format: time
            end_time:
              type: string
              format: time
            all_day:
              type: boolean
            location:
              type: string
            organizer_id:
              type: integer
            score_type_id:
              type: integer
            status:
              type: string
      required:
        - event
    UpdateEventResponse:
      type: object
      properties:
        success:
          type: boolean
        event:
          $ref: '#/components/schemas/Event'

    CreateScoreMatrixRequest:
        type: object
        properties:
          score_matrics:
            type: array
            items:
              type: object
              properties:
                weight:
                  type: number
                  format: float
                max:
                  type: integer
                min:
                  type: integer
                event_id:
                  type: integer
                name:
                  type: string
        required:
          - score_matrics
    CreateScoreMatrixResponse:
      type: object
      properties:
        success:
          type: boolean
        score_matrics:
          type: array
          items:
            $ref: '#/components/schemas/ScoreMatrix'
    
    CreateInvestMatrixRequest:
      type: object
      properties:
        investor_matrix:
          type: object
          properties:
            total_amount:
              type: number
              format: float
            one_time_pay:
              type: number
              format: float
            judge_acc_amount:
              type: number
              format: float
            investor_type:
              type: string
            event_id:
              type: integer
      required:
        - investor_matrix
    CreateInvestMatrixResponse:
      type: object
      properties:
        success:
          type: boolean
        investor_matrix:
          $ref: '#/components/schemas/InvestorMatrix'
        
    AddJudgesToEventRequest:
      type: object
      properties:
        judge:
          type: object
          properties:
            member_ids:
              type: array
              items:
                type: integer
            event_id:
              type: integer
            active:
              type: boolean
            current_amount:
              type: number
              format: float
      required:
        - judge    
    AddJudgesToEventResponse:
      type: object
      properties:
        success:
          type: boolean
        judges:
          type: array
          items:
            $ref: '#/components/schemas/Judge'

    AddEditorsToEventRequest:
      type: object
      properties:
        editor:
          type: object
          properties:
            member_ids:
              type: array
              items:
                type: integer
            event_id:
              type: integer
            active:
              type: boolean
      required:
        - editor
    AddEditorsToEventResponse:
      type: object
      properties:
        success:
          type: boolean
        editors:
          type: array
          items:
            $ref: '#/components/schemas/Editor'
    
    CreateTeamRequest:
      type: object
      properties:
        team:
          type: object
          properties:
            event_id:
              type: integer
            name:
              type: string
            member_ids:
              type: array
              items:
                type: integer
            active:
              type: boolean
            desc:
              type: string
            pitching_order:
              type: integer
            website_link:
              type: string
      required:
        - team
    CreateTeamResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: object
          properties:
            team:
              $ref: '#/components/schemas/Team'
            teamLeader:
              $ref: '#/components/schemas/TeamLeader'
            teamEvent:
              $ref: '#/components/schemas/TeamEvent'
            tranInvestor:
              type: object
              nullable: true

    AddTeamWithLeaderRequest:
      type: object
      properties:
        team:
          type: object
          properties:
            event_id:
              type: integer
            member_ids:
              type: array
              items:
                type: integer
            active:
              type: boolean
      required:
        - team
    AddTeamWithLeaderResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: object
          properties:
            teams:
              type: array
              items:
                $ref: '#/components/schemas/Team'
            teamLeaders:
              type: array
              items:
                $ref: '#/components/schemas/TeamLeader'
            teamEvents:
              type: array
              items:
                $ref: '#/components/schemas/TeamEvent'
            errors:
              type: array
              items:
                type: array
                items:
                  type: string

    GetScoreTypesResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: object
          properties:
            scoreTypes:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  desc:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
              
    Judge:
      type: object
      properties:
        id:
          type: integer
        member_id:
          type: integer
        event_id:
          type: integer
        active:
          type: boolean
        current_amount:
          type: number
          format: float   
    Event:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        status:
          type: string
        desc:
          type: string
        active:
          type: boolean
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        all_day:
          type: boolean
        location:
          type: string
        event_type_id:
          type: integer
        score_type_id:
          type: integer
    ScoreMatrix:
          type: object
          properties:
            weight:
              type: number
              format: float
            max:
              type: integer
            min:
              type: integer
            event_id:
              type: integer
            name:
              type: string
    InvestorMatrix:
      type: object
      properties:
        total_amount:
          type: number
          format: float
        one_time_pay:
          type: number
          format: float
        judge_acc_amount:
          type: number
          format: float
        investor_type:
          type: string
        event_id:
          type: integer
    Editor:
      type: object
      properties:
        id:
          type: integer
        member_id:
          type: integer
        event_id:
          type: integer
        active:
          type: boolean
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        desc:
          type: string
        active:
          type: boolean
        website_link:
          type: string
        organizer_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        event_id:
          type: integer
        total_score:
          type: number
          nullable: true
        pitching_order:
          type: integer
          nullable: true
    TeamLeader:
      type: object
      properties:
        id:
          type: integer
        member_id:
          type: integer
        team_id:
          type: integer
        leader:
          type: boolean
          nullable: true
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        event_id:
          type: integer
    TeamEvent:
      type: object
      properties:
        id:
          type: integer
        team_id:
          type: integer
        event_id:
          type: integer
        total_score:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          items:
            type: string
